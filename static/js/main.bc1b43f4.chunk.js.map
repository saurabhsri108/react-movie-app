{"version":3,"sources":["components/Movies.js","routes/Home.js","App.js","index.js"],"names":["Movies","props","console","log","id","genres","background_poster","title","description","poster_path","release_date","vote_average","vote_count","className","src","alt","join","slice","href","style","background","Home","state","isLoading","secure_base_url","poster_sizes","genre_list","movies","getConfig","a","axios","get","data","images","setState","getGenreList","getMovieList","results","this","image_url_base","map","movie","filter","item","genre_ids","includes","genre","name","backdrop_path","original_title","overview","listMovies","React","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0SAyDeA,G,MArDA,SAACC,GACdC,QAAQC,IAAIF,GADY,IAGtBG,EASEH,EATFG,GACAC,EAQEJ,EARFI,OACAC,EAOEL,EAPFK,kBACAC,EAMEN,EANFM,MACAC,EAKEP,EALFO,YACAC,EAIER,EAJFQ,YACAC,EAGET,EAHFS,aACAC,EAEEV,EAFFU,aACAC,EACEX,EADFW,WAEF,OACE,sBAAKC,UAAU,aAAaT,GAAG,SAA/B,UACE,sBAAKS,UAAU,eAAf,UACE,sBAAKA,UAAU,eAAf,UACE,qBAAKA,UAAU,YAAYC,IAAKL,EAAaM,IAAKR,IAClD,6BAAKA,IACL,6BAAKG,IACL,uBAAMG,UAAU,UAAhB,qBAAmCF,KACnC,uBAAME,UAAU,UAAhB,yBAAuCD,KACvC,mBAAGC,UAAU,OAAb,SAAqBR,EAAOW,KAAK,WAEnC,qBAAKH,UAAU,aAAf,SACE,mBAAGA,UAAU,OAAb,SAAqBL,EAAYS,MAAM,EAAG,KAAO,UAEnD,qBAAKJ,UAAU,YAAf,SACE,mBAAGK,KAAI,2CAAsCd,EAAtC,KAAP,gCAGJ,qBACES,UAAU,YACVM,MAAO,CACLC,WAAW,OAAD,OAASd,WCqDde,E,4MArFbC,MAAQ,CACNC,WAAW,EACXC,gBAAiB,KACjBC,aAAc,GACdC,WAAY,GACZC,OAAQ,I,EAGVC,U,sBAAY,kCAAAC,EAAA,2JAOAC,IAAMC,IAPN,2GAIRC,KACEC,OAAUT,EALJ,EAKIA,gBAAiBC,EALrB,EAKqBA,aAG/B,EAAKS,SAAS,CAAEV,kBAAiBC,iBARvB,2C,EAYZU,a,sBAAe,8BAAAN,EAAA,6KAIHC,IAAMC,IAJH,yHAGH1B,EAHG,EAGX2B,KAAQ3B,OAEV,EAAK6B,SAAS,CAAER,WAAYrB,IALf,2C,EASf+B,a,sBAAe,8BAAAP,EAAA,iKAIHC,IAAMC,IAJH,6GAGHM,EAHG,EAGXL,KAAQK,QAEV,EAAKH,SAAS,CAAEP,OAAQU,EAASd,WAAW,IAL/B,2C,kEASbe,KAAKV,YACLU,KAAKH,eACLG,KAAKF,iB,iCAGIT,GAAS,IACVD,EAAeY,KAAKhB,MAApBI,WACFa,EAAiBD,KAAKhB,MAAME,gBAAkB,QACpD,OACE,qBAAKX,UAAU,iBAAf,SACGc,EAAOa,KAAI,SAACC,GACX,IAAMpC,EAASqB,EACZgB,QAAO,SAACC,GACP,OAAIF,EAAMG,UAAUC,SAASF,EAAKvC,IAAYuC,EACvC,QAERH,KAAI,SAACM,GAAD,OAAWA,EAAMC,QACxB,OACE,cAAC,EAAD,CAEE3C,GAAIqC,EAAMrC,GACVC,OAAQA,EACRC,kBAAmBiC,EAAiBE,EAAMO,cAC1CzC,MAAOkC,EAAMQ,eACbzC,YAAaiC,EAAMS,SACnBzC,YAAa8B,EAAiBE,EAAMhC,YACpCC,aAAc+B,EAAM/B,aACpBC,aAAc8B,EAAM9B,aACpBC,WAAY6B,EAAM7B,YATb6B,EAAMrC,W,+BAiBb,IAAD,EACuBkC,KAAKhB,MAA3BC,EADD,EACCA,UAAWI,EADZ,EACYA,OACnB,OACE,sBAAKd,UAAU,cAAf,UACE,oBAAIA,UAAU,SAAd,mCACCU,EAAY,aAAee,KAAKa,WAAWxB,U,GAhFjCyB,IAAMC,W,MCMVC,MARf,WACE,OACE,qBAAKzC,UAAU,MAAf,SACE,cAAC,EAAD,OCFN0C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.bc1b43f4.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Movies.css\";\r\n\r\nconst Movies = (props) => {\r\n  console.log(props);\r\n  const {\r\n    id,\r\n    genres,\r\n    background_poster,\r\n    title,\r\n    description,\r\n    poster_path,\r\n    release_date,\r\n    vote_average,\r\n    vote_count,\r\n  } = props;\r\n  return (\r\n    <div className=\"movie_card\" id=\"bright\">\r\n      <div className=\"info_section\">\r\n        <div className=\"movie_header\">\r\n          <img className=\"locandina\" src={poster_path} alt={title} />\r\n          <h1>{title}</h1>\r\n          <h4>{release_date}</h4>\r\n          <span className=\"minutes\">Rating: {vote_average}</span>\r\n          <span className=\"minutes\">Vote Count: {vote_count}</span>\r\n          <p className=\"type\">{genres.join(\", \")}</p>\r\n        </div>\r\n        <div className=\"movie_desc\">\r\n          <p className=\"text\">{description.slice(0, 160) + \"...\"}</p>\r\n        </div>\r\n        <div className=\"read_more\">\r\n          <a href={`https://www.themoviedb.org/movie/${id}/`}>Complete Info</a>\r\n        </div>\r\n      </div>\r\n      <div\r\n        className=\"blur_back\"\r\n        style={{\r\n          background: `url(${background_poster}`,\r\n        }}\r\n      ></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nMovies.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  genres: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  background_poster: PropTypes.string.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  description: PropTypes.string.isRequired,\r\n  poster_path: PropTypes.string.isRequired,\r\n  release_date: PropTypes.string.isRequired,\r\n  vote_average: PropTypes.number.isRequired,\r\n  vote_count: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Movies;\r\n","import React from \"react\";\r\nimport \"./Home.css\";\r\nimport axios from \"axios\";\r\nimport Movies from \"../components/Movies\";\r\n\r\nclass Home extends React.Component {\r\n  state = {\r\n    isLoading: true,\r\n    secure_base_url: null,\r\n    poster_sizes: [],\r\n    genre_list: [],\r\n    movies: [],\r\n  };\r\n\r\n  getConfig = async () => {\r\n    const configUrl = `https://api.themoviedb.org/3/configuration?api_key=424009d07c87cce545a0b72550a8d48a`;\r\n\r\n    const {\r\n      data: {\r\n        images: { secure_base_url, poster_sizes },\r\n      },\r\n    } = await axios.get(configUrl);\r\n    this.setState({ secure_base_url, poster_sizes });\r\n    // console.log(secure_base_url, poster_sizes);\r\n  };\r\n\r\n  getGenreList = async () => {\r\n    const genreUrl = `https://api.themoviedb.org/3/genre/movie/list?api_key=424009d07c87cce545a0b72550a8d48a&language=en-US`;\r\n    const {\r\n      data: { genres },\r\n    } = await axios.get(genreUrl);\r\n    this.setState({ genre_list: genres });\r\n    // console.log(genres);\r\n  };\r\n\r\n  getMovieList = async () => {\r\n    const url = `https://api.themoviedb.org/3/trending/movie/week?api_key=424009d07c87cce545a0b72550a8d48a`;\r\n    const {\r\n      data: { results },\r\n    } = await axios.get(url);\r\n    this.setState({ movies: results, isLoading: false }); // console.log(results);\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getConfig();\r\n    this.getGenreList();\r\n    this.getMovieList();\r\n  }\r\n\r\n  listMovies(movies) {\r\n    const { genre_list } = this.state;\r\n    const image_url_base = this.state.secure_base_url + \"/w500\";\r\n    return (\r\n      <div className=\"movie_listings\">\r\n        {movies.map((movie) => {\r\n          const genres = genre_list\r\n            .filter((item) => {\r\n              if (movie.genre_ids.includes(item.id)) return item;\r\n              return null;\r\n            })\r\n            .map((genre) => genre.name);\r\n          return (\r\n            <Movies\r\n              key={movie.id}\r\n              id={movie.id}\r\n              genres={genres}\r\n              background_poster={image_url_base + movie.backdrop_path}\r\n              title={movie.original_title}\r\n              description={movie.overview}\r\n              poster_path={image_url_base + movie.poster_path}\r\n              release_date={movie.release_date}\r\n              vote_average={movie.vote_average}\r\n              vote_count={movie.vote_count}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { isLoading, movies } = this.state;\r\n    return (\r\n      <div className=\"movies_list\">\r\n        <h1 className=\"header\">Weekly 20 Top Trender</h1>\r\n        {isLoading ? \"Loading...\" : this.listMovies(movies)}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import Home from \"./routes/Home\";\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Home />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}